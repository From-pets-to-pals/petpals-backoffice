# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
  - main
pool:
  vmImage: ubuntu-latest

stages:
  - stage: build
    jobs:
      - job:
        steps:
          - task: CmdLine@2
            condition: ne(variables['Build.SourceBranchName'], 'main')
            displayName: Fetch additional repos
            inputs:
              script: |
                cd $(Build.SourcesDirectory)/$(APP_NAME)
                echo $(Build.SourceBranchName)
                git pull --all
                git show-ref
                cd $(Build.SourcesDirectory)
          - task: CmdLine@2
            inputs:
              script: |
                git clone https://$(GIT_USER):$(PAT)@github.com/From-pets-to-pals/petpals-conf.git
                ls
                cp petpals-conf/dev/front/sonar-project.properties petpals
          - task: NodeTool@0
            inputs:
              versionSpec: '18.14'
            displayName: 'Install Node.js'
          - script: |
              cd petpals
              npm install -g @angular/cli && npm install && ng build && npm test && npm run sonar-scanner
            displayName: 'npm install, buid, and test'
            condition: eq(variables['Build.SourceBranchName'], 'main')
          - script: |
              cd petpals
              echo $(System.PullRequest.PullRequestId)
              echo $(System.PullRequest.PullRequestNumber)
              npm install -g @angular/cli && npm install && ng build && npm test && npm run sonar-scanner -- -Dsonar.pullrequest.branch=$(System.PullRequest.SourceBranch) -Dsonar.pullrequest.key=$(System.PullRequest.PullRequestNumber) -Dsonar.pullrequest.base=main
            displayName: 'npm install, buid, and test'
            condition: ne(variables['Build.SourceBranchName'], 'main')
          - task: CmdLine@2
            displayName: Sonar analysis
            inputs :
                script: |
                    cd petpals
                    npm run sonar-scanner
          - task: PublishTestResults@2
            displayName: Publish test results
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/junit.xml'
              searchFolder: '$(Build.SourcesDirectory)/petpals'
              failTaskOnFailedTests: true
              failTaskOnFailureToPublishResults: true
              failTaskOnMissingResultsFile: true
          - task: PublishCodeCoverageResults@2
            displayName: Publish code coverage results
            inputs:
              summaryFileLocation: '$(Build.SourcesDirectory)/petpals/coverage/cobertura-coverage.xml'
              failIfCoverageEmpty: true
          - task: ArchiveFiles@2
            displayName: Archive build artifact
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)/$(SUBFOLDER)'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/petpals-backoffice-$(Build.BuildId).zip'
              replaceExistingArchive: false
          - task: PublishBuildArtifacts@1
            displayName: Publish build artifact
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/petpals-backoffice-$(Build.BuildId).zip'
              ArtifactName: 'petpals-backoffice'