# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
<<<<<<< HEAD
  - main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: build
    jobs:
      - job:
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.14'
            displayName: 'Install Node.js'
          - script: |
              cd front
              npm install -g @angular/cli
              npm install
              ng build
              npm test
            displayName: 'npm install and build'
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/junit.xml'
              searchFolder: '$(Build.SourcesDirectory)/front'
              failTaskOnFailedTests: true
              failTaskOnFailureToPublishResults: true
              failTaskOnMissingResultsFile: true
          - task: PublishCodeCoverageResults@2
            inputs:
              summaryFileLocation: '$(Build.SourcesDirectory)/front/coverage/index.html'
          - task: ArchiveFiles@2
            displayName: Archive build artifact
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)/front/dist/front'
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/petpals-backoffice-$(Build.BuildId).zip'
              replaceExistingArchive: false
          - task: PublishBuildArtifacts@1
            displayName: Publish build artifact
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/petpals-backoffice-$(Build.BuildId).zip'
              ArtifactName: 'petpals-backoffice'
              publishLocation: 'Container'
          - task: AzureStaticWebApp@0
            displayName: Deploy to Azure Static Web App
            inputs:
              workingDirectory: '$(Build.SourcesDirectory)'
              output_location: '/front/dist/front'
              app_location: '/front/dist/front/browser'
              skip_app_build: true
              skip_api_build: true
              verbose: true
              azure_static_web_apps_api_token: '$(API_TOKEN)'
=======
- main
name: '$(Build.BuildId)'
pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.14'
  displayName: 'Install Node.js'
- script: |
    cd front
    npm install -g @angular/cli
    npm install
    ng build
  displayName: 'npm install and build'
- task: ArchiveFiles@2
  displayName: Archive build artifact
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/$(SUBFOLDER)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(APP_NAME)-$(Build.BuildId).zip'
    replaceExistingArchive: false
- task: PublishBuildArtifacts@1
  displayName: Publish build artifact
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(APP_NAME)-$(Build.BuildId).zip'
    ArtifactName: '$(APP_NAME)'
    publishLocation: 'Container'
- task: AzureStaticWebApp@0
  displayName: Deploy to Azure Static Web App
  inputs:
    workingDirectory: '$(Build.SourcesDirectory)'
    output_location: '/$(SUBFOLDER)'
    app_location: '/$(SUBFOLDER)/browser'
    skip_app_build: true
    skip_api_build: true
    verbose: true
    azure_static_web_apps_api_token: '$(API_TOKEN)'

>>>>>>> e84457da9a8cb97f08ff8193e93dd37ec08aaed0

  - stage: Deploy
    displayName: Deploy to petpals-pals
    jobs:
      - job: Deploy
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'specific'
              project: '12e6b272-e75b-4b73-aebc-da22ad6551a2'
              pipeline: '6'
              buildVersionToDownload: 'latest'
              downloadType: 'single'
              artifactName: 'petpals-backoffice'
              itemPattern: '**/browser'
              downloadPath: '$(System.ArtifactsDirectory)'
              checkDownloadedFiles: true
          - task: CopyFiles@2
            displayName: 'Copy Files from artifact staging directory'
            inputs:
              SourceFolder: '$(System.ArtifactsDirectory)/petpals-backoffice'
              Contents: 'browser'
              TargetFolder: '$(System.DefaultWorkingDirectory)'
              OverWrite: true